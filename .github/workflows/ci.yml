name: CI

on:
  push:
    branches:
      - dev
  pull_request: {}

env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  check-code-style:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.102'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Check code style
      run: dotnet tool install --global StyleCop.Analyzers --version 3.0.2

    - run: dotnet build /p:AdditionalAnalyzers="StyleCop.Analyzers" --no-restore

    - name: Run tests
      run: dotnet test --no-build --verbosity normal
  build-and-test:
    runs-on: ubuntu-latest

    strategy: 
      fail-fast: false
      matrix:
        projectPath:
          -  ${{ github.workspace }}
        testMode:
          - playmode
          - editmode
          - standalone

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: true
    
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: Library
          key: ${{ runner.os }}-unity-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          
      - name: Test runner
        uses: game-ci/unity-test-runner@v4
        with:
          path: ${{ github.workspace }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          packageMode: false
          unityVersion: 2022.3.17f1

      - uses: game-ci/unity-test-runner@v4
        id: gameTestStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.testMode }} Test Results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          path: ${{ steps.gameTestStep.outputs.artifactsPath }}

      - name: Coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          path: ${{ steps.gameTestStep.outputs.coveragePath }}
        
      - name: Build repository
        uses: game-ci/unity-builder@v4

      
        with:
          targetPlatform: WebGL
