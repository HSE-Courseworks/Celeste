name: CI

on:
  push:
    branches:
      - dev
  pull_request: {}

env:
    UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
    UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
    UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy: 
      fail-fast: false
      matrix:
        projectPath:
          -  ${{ github.workspace }}/Assets
        testMode:
          - playmode
          - editmode
          - standalone

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Return license
        uses: game-ci/unity-return-license@v2
        if: always()

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: Library
          key: ${{ runner.os }}-unity-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          
      - name: Test runner
        uses: game-ci/unity-test-runner@v4
        with:
          projectPath: ./Assets
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          packageMode: false
          unityVersion: 2022.3.17f1

      - name: Store artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          path: ${{ steps.gameTestStep.outputs.artifactsPath }}

      - name: Coverage results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          path: ${{ steps.gameTestStep.outputs.coveragePath }}

      - uses: game-ci/unity-test-runner@v4
        id: gameTestStep
        with:
          artifactsPath: store_artifact.txt
          coveragePath: coverage_artifact.txt
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
        
      - name: Build repository
        uses: game-ci/unity-builder@v4
        with:
          targetPlatform: WebGL 
              
